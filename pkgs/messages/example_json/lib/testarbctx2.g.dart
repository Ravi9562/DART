// Generated by package:messages_builder

import 'dart:async';

import 'package:asset_bundle/asset_bundle.dart';
import 'package:messages/messages_json.dart';
import 'package:messages/resources_asset.dart';

typedef Locale = String;

class AboutPageMessages {
  final IntlObject intlObject;

  Locale currentLocale = 'en';

  late final MessagesAssetBundle bundle;

  AboutPageMessages(this.intlObject) {
    loadMessageBundle();
  }

  void loadMessageBundle() {
    final assetBundle = CachedAssetBundle();
    bundle = MessagesAssetBundle(
      assetBundle: assetBundle,
      name: 'about_messages',
      intl: intlObject,
    );
  }

  Iterable<String> get knownLocales => ['en', 'de'];

  @pragma('dart2js:tryInline')
  Future<String> aboutMessage({required String websitename}) async {
    return await generate(
      bundle,
      [websitename],
      currentLocale,
      intlObject,
      1,
    );
  }

  @Resource('messages')
  @pragma('dart2js:resource-identifier')
  @pragma('dart2js:never-inline')
  static Future<String> generate(MessagesAssetBundle bundle, List args,
      String currentLocale, IntlObject intlObject, int index) async {
    final message =
        await bundle.getMessageByIndex(locale: currentLocale, index: index);
    return message.generateString(args, intl: intlObject);
  }
}

enum AboutPageMessagesEnum {
  helloAndWelcome,
  aboutMessage,
  newMessages,
  newMessages2
}
